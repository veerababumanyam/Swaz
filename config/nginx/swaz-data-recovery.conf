# Swaz Data Recovery Labs - Nginx Configuration
# Place this file in /etc/nginx/sites-available/ and create a symlink in sites-enabled/
# Usage: sudo ln -s /etc/nginx/sites-available/swaz-data-recovery /etc/nginx/sites-enabled/

server {
    listen 80;
    server_name _; # This matches any hostname

    # Root directory for static files
    root /var/www/swaz-data-recovery;
    index index.html;

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Content Security Policy for production
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://aistudiocdn.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: https://api.qrserver.com; connect-src 'self' ws: wss: https://generativelanguage.googleapis.com; worker-src 'self' blob:; frame-ancestors 'none'; object-src 'none'; base-uri 'self'; form-action 'self';" always;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Handle React Router (SPA routing)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # API proxy (if you need to proxy API calls)
    # location /api/ {
    #     proxy_pass http://localhost:3001/;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_cache_bypass $http_upgrade;
    # }

    # WebSocket proxy for signaling server (if running on same server)
    location /ws {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 86400;
    }

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Security: Hide nginx version
    server_tokens off;

    # Logging
    access_log /var/log/nginx/swaz-data-recovery_access.log;
    error_log /var/log/nginx/swaz-data-recovery_error.log;

    # SSL configuration (uncomment when you have SSL certificate)
    # listen 443 ssl http2;
    # ssl_certificate /etc/nginx/ssl/swazdatarecovery.com.crt;
    # ssl_certificate_key /etc/nginx/ssl/swazdatarecovery.com.key;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    # ssl_prefer_server_ciphers off;

    # Redirect HTTP to HTTPS (uncomment with SSL)
    # if ($scheme != "https") {
    #     return 301 https://$server_name$request_uri;
    # }
}

# This configuration handles all hostnames with the _ server_name above
